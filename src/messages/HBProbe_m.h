//
// Generated file, do not edit! Created by nedtool 5.5 from messages/HBProbe.msg.
//

#ifndef __HBPROBE_M_H
#define __HBPROBE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "../common/Constants.h"
// }}

/**
 * Class generated from <tt>messages/HBProbe.msg:24</tt> by nedtool.
 * <pre>
 * packet HBProbe
 * {
 *     string displayString = DISPLAY_STR_MSG_HIDDEN;
 *     // logical computer name
 *     string LCName;
 *     unsigned short peerId;
 *     string sourceName;
 *     string destName;
 *     string survivals;
 *     // reconfiguration threshold, i.e., the number of extra replicas + 1
 *     int threshold;
 *     simtime_t timestamp;
 *     bool isInit;
 *     simtime_t startTime;
 * }
 * </pre>
 */
class HBProbe : public ::omnetpp::cPacket
{
  protected:
    ::omnetpp::opp_string displayString;
    ::omnetpp::opp_string LCName;
    unsigned short peerId;
    ::omnetpp::opp_string sourceName;
    ::omnetpp::opp_string destName;
    ::omnetpp::opp_string survivals;
    int threshold;
    ::omnetpp::simtime_t timestamp;
    bool isInit;
    ::omnetpp::simtime_t startTime;

  private:
    void copy(const HBProbe& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const HBProbe&);

  public:
    HBProbe(const char *name=nullptr, short kind=0);
    HBProbe(const HBProbe& other);
    virtual ~HBProbe();
    HBProbe& operator=(const HBProbe& other);
    virtual HBProbe *dup() const override {return new HBProbe(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getDisplayString() const;
    virtual void setDisplayString(const char * displayString);
    virtual const char * getLCName() const;
    virtual void setLCName(const char * LCName);
    virtual unsigned short getPeerId() const;
    virtual void setPeerId(unsigned short peerId);
    virtual const char * getSourceName() const;
    virtual void setSourceName(const char * sourceName);
    virtual const char * getDestName() const;
    virtual void setDestName(const char * destName);
    virtual const char * getSurvivals() const;
    virtual void setSurvivals(const char * survivals);
    virtual int getThreshold() const;
    virtual void setThreshold(int threshold);
    virtual ::omnetpp::simtime_t getTimestamp() const;
    virtual void setTimestamp(::omnetpp::simtime_t timestamp);
    virtual bool getIsInit() const;
    virtual void setIsInit(bool isInit);
    virtual ::omnetpp::simtime_t getStartTime() const;
    virtual void setStartTime(::omnetpp::simtime_t startTime);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const HBProbe& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, HBProbe& obj) {obj.parsimUnpack(b);}


#endif // ifndef __HBPROBE_M_H

