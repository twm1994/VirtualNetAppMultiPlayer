//
// Generated file, do not edit! Created by nedtool 5.5 from messages/UpdateApply.msg.
//

#ifndef __UPDATEAPPLY_M_H
#define __UPDATEAPPLY_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>messages/UpdateApply.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet UpdateApply
 * {
 *     // applied event
 *     string event;
 *     // genereated state
 *     unsigned long state;
 *     // corresponding round in Qd
 *     int round;
 *     // corresponding clientId of the round in Qd
 *     unsigned long clientId;
 *     // event sequence number of the client and the round in Qd 
 *     int sequence;
 * }
 * </pre>
 */
class UpdateApply : public ::omnetpp::cPacket
{
  protected:
    ::omnetpp::opp_string event;
    unsigned long state;
    int round;
    unsigned long clientId;
    int sequence;

  private:
    void copy(const UpdateApply& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const UpdateApply&);

  public:
    UpdateApply(const char *name=nullptr, short kind=0);
    UpdateApply(const UpdateApply& other);
    virtual ~UpdateApply();
    UpdateApply& operator=(const UpdateApply& other);
    virtual UpdateApply *dup() const override {return new UpdateApply(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getEvent() const;
    virtual void setEvent(const char * event);
    virtual unsigned long getState() const;
    virtual void setState(unsigned long state);
    virtual int getRound() const;
    virtual void setRound(int round);
    virtual unsigned long getClientId() const;
    virtual void setClientId(unsigned long clientId);
    virtual int getSequence() const;
    virtual void setSequence(int sequence);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const UpdateApply& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, UpdateApply& obj) {obj.parsimUnpack(b);}


#endif // ifndef __UPDATEAPPLY_M_H

