//
// Generated file, do not edit! Created by nedtool 5.5 from messages/Gossip.msg.
//

#ifndef __GOSSIP_M_H
#define __GOSSIP_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "../common/Constants.h"
// }}

/**
 * Class generated from <tt>messages/Gossip.msg:24</tt> by nedtool.
 * <pre>
 * packet Gossip
 * {
 *     string sourceName;
 *     string destName;
 *     simtime_t sendTime;
 *     int lastRound;
 * }
 * </pre>
 */
class Gossip : public ::omnetpp::cPacket
{
  protected:
    ::omnetpp::opp_string sourceName;
    ::omnetpp::opp_string destName;
    ::omnetpp::simtime_t sendTime;
    int lastRound;

  private:
    void copy(const Gossip& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Gossip&);

  public:
    Gossip(const char *name=nullptr, short kind=0);
    Gossip(const Gossip& other);
    virtual ~Gossip();
    Gossip& operator=(const Gossip& other);
    virtual Gossip *dup() const override {return new Gossip(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getSourceName() const;
    virtual void setSourceName(const char * sourceName);
    virtual const char * getDestName() const;
    virtual void setDestName(const char * destName);
    virtual ::omnetpp::simtime_t getSendTime() const;
    virtual void setSendTime(::omnetpp::simtime_t sendTime);
    virtual int getLastRound() const;
    virtual void setLastRound(int lastRound);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Gossip& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Gossip& obj) {obj.parsimUnpack(b);}


#endif // ifndef __GOSSIP_M_H

