//
// Generated file, do not edit! Created by nedtool 5.5 from messages/ChordMessage.msg.
//

#ifndef __CHORDMESSAGE_M_H
#define __CHORDMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Enum generated from <tt>messages/ChordMessage.msg:21</tt> by nedtool.
 * <pre>
 * enum ChordMsgType
 * {
 *     CHORD_LOOK_UP = 0;
 *     CHORD_FINAL = 1;
 *     SUCCESSOR = 2;
 *     QUERY_SUCCESSOR = 3;
 *     SUCCESSOR_FOUND = 4;
 *     NOTIFY = 5;
 *     CHORD_STORE = 6;
 *     CHORD_GET = 7;
 *     CHORD_REPLICATE = 8;
 *     CHORD_FIX_REPLICA = 10;
 *     UPDATE_PREDECESSOR = 11;
 *     CHORD_STORE_REPLY = 12;
 *     CHORD_GET_REPLY = 13;
 *     CHORD_LOOKUP_REPLY = 14;
 * }
 * </pre>
 */
enum ChordMsgType {
    CHORD_LOOK_UP = 0,
    CHORD_FINAL = 1,
    SUCCESSOR = 2,
    QUERY_SUCCESSOR = 3,
    SUCCESSOR_FOUND = 4,
    NOTIFY = 5,
    CHORD_STORE = 6,
    CHORD_GET = 7,
    CHORD_REPLICATE = 8,
    CHORD_FIX_REPLICA = 10,
    UPDATE_PREDECESSOR = 11,
    CHORD_STORE_REPLY = 12,
    CHORD_GET_REPLY = 13,
    CHORD_LOOKUP_REPLY = 14
};

/**
 * Class generated from <tt>messages/ChordMessage.msg:38</tt> by nedtool.
 * <pre>
 * packet ChordMessage
 * {
 *     int type \@enum(ChordMsgType);
 *     string label;
 *     unsigned long sender;
 *     unsigned long key;
 *     string content;
 *     // hop count
 *     int hop;
 * }
 * </pre>
 */
class ChordMessage : public ::omnetpp::cPacket
{
  protected:
    int type;
    ::omnetpp::opp_string label;
    unsigned long sender;
    unsigned long key;
    ::omnetpp::opp_string content;
    int hop;

  private:
    void copy(const ChordMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ChordMessage&);

  public:
    ChordMessage(const char *name=nullptr, short kind=0);
    ChordMessage(const ChordMessage& other);
    virtual ~ChordMessage();
    ChordMessage& operator=(const ChordMessage& other);
    virtual ChordMessage *dup() const override {return new ChordMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getType() const;
    virtual void setType(int type);
    virtual const char * getLabel() const;
    virtual void setLabel(const char * label);
    virtual unsigned long getSender() const;
    virtual void setSender(unsigned long sender);
    virtual unsigned long getKey() const;
    virtual void setKey(unsigned long key);
    virtual const char * getContent() const;
    virtual void setContent(const char * content);
    virtual int getHop() const;
    virtual void setHop(int hop);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ChordMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ChordMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __CHORDMESSAGE_M_H

