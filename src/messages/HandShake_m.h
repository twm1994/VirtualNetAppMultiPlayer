//
// Generated file, do not edit! Created by nedtool 5.5 from messages/HandShake.msg.
//

#ifndef __HANDSHAKE_M_H
#define __HANDSHAKE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>messages/HandShake.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet HandShake
 * {
 *     unsigned long senderId;
 *     int seq;
 *     string sourceName;
 *     string destName;
 *     simtime_t joinTime;
 *     string LCName;
 * }
 * </pre>
 */
class HandShake : public ::omnetpp::cPacket
{
  protected:
    unsigned long senderId;
    int seq;
    ::omnetpp::opp_string sourceName;
    ::omnetpp::opp_string destName;
    ::omnetpp::simtime_t joinTime;
    ::omnetpp::opp_string LCName;

  private:
    void copy(const HandShake& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const HandShake&);

  public:
    HandShake(const char *name=nullptr, short kind=0);
    HandShake(const HandShake& other);
    virtual ~HandShake();
    HandShake& operator=(const HandShake& other);
    virtual HandShake *dup() const override {return new HandShake(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned long getSenderId() const;
    virtual void setSenderId(unsigned long senderId);
    virtual int getSeq() const;
    virtual void setSeq(int seq);
    virtual const char * getSourceName() const;
    virtual void setSourceName(const char * sourceName);
    virtual const char * getDestName() const;
    virtual void setDestName(const char * destName);
    virtual ::omnetpp::simtime_t getJoinTime() const;
    virtual void setJoinTime(::omnetpp::simtime_t joinTime);
    virtual const char * getLCName() const;
    virtual void setLCName(const char * LCName);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const HandShake& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, HandShake& obj) {obj.parsimUnpack(b);}


#endif // ifndef __HANDSHAKE_M_H

