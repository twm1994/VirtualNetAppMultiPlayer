//
// Generated file, do not edit! Created by nedtool 5.5 from messages/AppData.msg.
//

#ifndef __APPDATA_M_H
#define __APPDATA_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "../common/Constants.h"
// }}

/**
 * Class generated from <tt>messages/AppData.msg:20</tt> by nedtool.
 * <pre>
 * packet AppData
 * {
 *     string content;
 *     int size;
 *     string LCName;
 * }
 * </pre>
 */
class AppData : public ::omnetpp::cPacket
{
  protected:
    ::omnetpp::opp_string content;
    int size;
    ::omnetpp::opp_string LCName;

  private:
    void copy(const AppData& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AppData&);

  public:
    AppData(const char *name=nullptr, short kind=0);
    AppData(const AppData& other);
    virtual ~AppData();
    AppData& operator=(const AppData& other);
    virtual AppData *dup() const override {return new AppData(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getContent() const;
    virtual void setContent(const char * content);
    virtual int getSize() const;
    virtual void setSize(int size);
    virtual const char * getLCName() const;
    virtual void setLCName(const char * LCName);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AppData& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AppData& obj) {obj.parsimUnpack(b);}


#endif // ifndef __APPDATA_M_H

