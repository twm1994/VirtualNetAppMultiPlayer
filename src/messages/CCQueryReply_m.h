//
// Generated file, do not edit! Created by nedtool 5.5 from messages/CCQueryReply.msg.
//

#ifndef __CCQUERYREPLY_M_H
#define __CCQUERYREPLY_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "../common/Constants.h"
// }}

/**
 * Class generated from <tt>messages/CCQueryReply.msg:24</tt> by nedtool.
 * <pre>
 * packet CCQueryReply
 * {
 *     string displayString = DISPLAY_STR_MSG_GROUP_CC;
 * 
 *     string senderName;
 *     string state;
 * }
 * </pre>
 */
class CCQueryReply : public ::omnetpp::cPacket
{
  protected:
    ::omnetpp::opp_string displayString;
    ::omnetpp::opp_string senderName;
    ::omnetpp::opp_string state;

  private:
    void copy(const CCQueryReply& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CCQueryReply&);

  public:
    CCQueryReply(const char *name=nullptr, short kind=0);
    CCQueryReply(const CCQueryReply& other);
    virtual ~CCQueryReply();
    CCQueryReply& operator=(const CCQueryReply& other);
    virtual CCQueryReply *dup() const override {return new CCQueryReply(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getDisplayString() const;
    virtual void setDisplayString(const char * displayString);
    virtual const char * getSenderName() const;
    virtual void setSenderName(const char * senderName);
    virtual const char * getState() const;
    virtual void setState(const char * state);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CCQueryReply& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CCQueryReply& obj) {obj.parsimUnpack(b);}


#endif // ifndef __CCQUERYREPLY_M_H

